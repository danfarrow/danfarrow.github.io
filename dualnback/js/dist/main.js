!function(e){var t={};function s(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(i,n,function(t){return e[t]}.bind(null,n));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="./dist/",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);const i={};document.addEventListener("DOMContentLoaded",()=>new class{constructor(e,t={}){this.config=Object.assign({},{dimensions:{colour:{triggerKey:"Q",triggerKeyCode:81,values:["#ed553b","#20639b","#f6d55c"]},position:{triggerKey:"E",triggerKeyCode:69,values:[0,1,2,3,4,5,6,7,8]}},nBackOffset:-2,questionBuffer:200,questionDuration:1800,roundsPerGame:20},t),this.view=new class{constructor(e){this.cells=[];const t=document.createElement("div");t.classList.add("cells");for(let e=0;e<9;e++){const e=document.createElement("div");t.appendChild(e),this.cells.push(e)}this.surtitle=document.createElement("h2"),this.subtitle=document.createElement("h2"),e.appendChild(this.surtitle),e.appendChild(t),e.appendChild(this.subtitle)}showSubtitle(e){this.subtitle.innerHTML=e}showSurtitle(e){this.surtitle.innerHTML=e}showQuestion(e){const t=e.dimensions.position,s=e.dimensions.colour;this.cells[t].setAttribute("style",`background-color: ${s};`)}removeQuestion(e){const t=e.dimensions.position;this.cells[t].removeAttribute("style")}}(e);const s=[];for(const e in this.config.dimensions)s.push(`<strong>${this.config.dimensions[e].triggerKey}</strong>: ${e}`);this.view.showSurtitle(`${s.join(", ")},\n         N-back: <strong>\n         ${this.config.nBackOffset}\n         </strong>`),this.view.showSubtitle("Press SPACE to start"),document.addEventListener("keydown",e=>this.onKeyPress(e)),this.resetGame()}resetGame(){this.timeoutId=null,this.questions=[],this.response=[],this.gameState="ready",this.potentialScore=0,this.round=0,this.score=0}onKeyPress(e){if(32===e.keyCode&&"ready"===this.gameState&&this.questionEnd(),27===e.keyCode&&"ready"!==this.gameState&&this.gameEnd(),"question"===this.gameState)for(const t in this.config.dimensions)e.keyCode===this.config.dimensions[t].triggerKeyCode&&this.onUserResponse(t)}gameEnd(){clearInterval(this.timeoutId),this.clearCurrentQuestion(),this.gameState="over",this.view.showSubtitle(`Game over! Score <strong>${this.score}</strong>\n         / <strong>${this.potentialScore}</strong>\n         <br />Press SPACE to restart`),this.resetGame()}onUserResponse(e){-1===this.response.indexOf(e)&&this.response.push(e)}questionCreate(){const e=new class{constructor(e){this.dimensions={};for(const t in e){const s=e[t].values,i=Math.floor(Math.random()*s.length);this.dimensions[t]=s[i]}}compare(e){if(!e)return[];const t=[];for(let s in e.dimensions)e.dimensions[s]===this.dimensions[s]&&t.push(s);return t}}(this.config.dimensions);this.questions.push(e),this.currentQuestion=e,this.gameState="question",this.view.showSubtitle(`${this.round} / ${this.config.roundsPerGame}`),this.view.showQuestion(e)}clearCurrentQuestion(){this.view.showSubtitle(""),this.currentQuestion&&(this.view.removeQuestion(this.currentQuestion),this.currentQuestion=null)}questionEnd(){const e=this.questions.length-1+this.config.nBackOffset;let t=[];if(e>=0){const s=this.questions[e];t=this.currentQuestion.compare(s),console.log(t)}this.potentialScore+=t.length;for(const e in this.config.dimensions)t.includes(e)&&this.response.includes(e)?this.score++:(t.includes(e)||this.response.includes(e))&&this.score--;this.clearCurrentQuestion(),this.response=[],this.gameState="buffer",this.round<this.config.roundsPerGame?this.timeoutId=setTimeout(()=>this.nextQuestion(),this.config.questionBuffer):this.gameEnd()}nextQuestion(){++this.round,this.questionCreate(),this.timeoutId=setTimeout(()=>this.questionEnd(),this.config.questionDuration)}}(document.getElementById("container"),i))}]);