!function(t){var e={};function s(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(n,i,function(e){return t[e]}.bind(null,i));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="./dist/",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);const n={nBackOffset:-2,questionBuffer:100,questionDuration:1200,targetRounds:20,targetPotentialScore:20,endOnTargetPotentialScore:!0};document.addEventListener("DOMContentLoaded",()=>new class{constructor(t,e={}){this.config={dimensions:{colour:{triggerKey:"Q",triggerKeyCode:81,values:["#ed553b","#20639b","#f6d55c"]},position:{triggerKey:"E",triggerKeyCode:69,values:[0,1,2,3,4,5,6,7,8]}},nBackOffset:-2,questionBuffer:200,questionDuration:1800,targetRounds:20,targetPotentialScore:20,endOnTargetPotentialScore:!0,...e},this.view=new class{constructor(t){this.cells=[];const e=document.createElement("div");e.classList.add("module","cells");for(let t=0;t<9;t++){const t=document.createElement("div");e.appendChild(t),this.cells.push(t)}const s=document.createElement("div");s.classList.add("module","header");const n=document.createElement("h1");n.innerText="Dual N Back trainer",s.appendChild(n);const i=document.createElement("h2");s.appendChild(i),this.surtitle=i;const o=document.createElement("h2");s.appendChild(o),this.subtitle=o,t.appendChild(s),t.appendChild(e)}showSubtitle(t){this.subtitle.innerHTML=t}showSurtitle(t){this.surtitle.innerHTML=t}showQuestion(t){const e=t.dimensions.position,s=t.dimensions.colour;this.cells[e].setAttribute("style",`background-color: ${s};`)}removeQuestion(t){const e=t.dimensions.position;this.cells[e].removeAttribute("style")}}(t);const s=[];for(const t in this.config.dimensions)s.push(`<strong>${this.config.dimensions[t].triggerKey}</strong>: ${t}`);this.view.showSurtitle(`${s.join(", ")},\n         N-back: <strong>\n         ${this.config.nBackOffset}\n         </strong>`),this.view.showSubtitle("Press SPACE to start"),document.addEventListener("keydown",t=>this.onKeyPress(t)),this.resetGame()}resetGame(){this.timeoutId=null,this.questions=[],this.response=[],this.gameState="ready",this.potentialScore=0,this.round=0,this.score=0}onKeyPress(t){if(32===t.keyCode&&"ready"===this.gameState&&this.questionEnd(),27===t.keyCode&&"ready"!==this.gameState&&this.gameEnd(),this.currentQuestion)for(const e in this.config.dimensions)t.keyCode===this.config.dimensions[e].triggerKeyCode&&this.onUserResponse(e)}gameEnd(){clearInterval(this.timeoutId),this.clearCurrentQuestion(),this.gameState="over";let t=Math.round(100*this.score/this.potentialScore);const e=isNaN(t)?"n/a":t+"%";this.view.showSubtitle(`Game over! Score <strong>${e}</strong>\n         ( ${this.score} / ${this.potentialScore} )\n         <br />Press SPACE to restart`),this.resetGame()}onUserResponse(t){-1===this.response.indexOf(t)&&this.response.push(t)}questionCreate(){const t=new class{constructor(t){this.dimensions={};for(const e in t){const s=t[e].values,n=Math.floor(Math.random()*s.length);this.dimensions[e]=s[n]}}compare(t){if(!t)return[];const e=[];for(let s in t.dimensions)t.dimensions[s]===this.dimensions[s]&&e.push(s);return e}}(this.config.dimensions);this.questions.push(t),this.currentQuestion=t,this.gameState="question",this.view.showQuestion(t)}clearCurrentQuestion(){this.currentQuestion&&(this.view.removeQuestion(this.currentQuestion),this.currentQuestion=null)}questionEnd(){const t=this.questions.length-1+this.config.nBackOffset;let e=[];if(t>=0){const s=this.questions[t];e=this.currentQuestion.compare(s),console.log(e)}this.potentialScore+=e.length;for(const t in this.config.dimensions)e.includes(t)&&this.response.includes(t)?this.score++:(e.includes(t)||this.response.includes(t))&&this.score--;this.clearCurrentQuestion(),this.response=[],this.config.endOnTargetPotentialScore&&this.potentialScore<this.config.targetPotentialScore||!this.config.endOnTargetPotentialScore&&this.round<this.config.targetRounds?this.timeoutId=setTimeout(()=>this.nextQuestion(),this.config.questionBuffer):this.gameEnd()}nextQuestion(){++this.round,this.questionCreate(),this.config.endOnTargetPotentialScore?this.view.showSubtitle(`Score: ${this.score} / ${this.potentialScore}`):this.view.showSubtitle(`Round: ${this.round} / ${this.config.targetRounds}`),this.timeoutId=setTimeout(()=>this.questionEnd(),this.config.questionDuration)}}(document.body,n))}]);